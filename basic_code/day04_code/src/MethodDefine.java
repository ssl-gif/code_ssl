
/*

方法的定义格式如下：

                    修饰符 返回值类型 方法名称(参数类型 参数名称, ...) {
                            方法体;
                            return 返回值;
                    }

①.修饰符：目前固定写法 public static
②.返回值类型：方法最终返回数据的数据类型，由return后的返回值的类型来决定。若该方法没有返回值，则返回值类型为void。
③.方法名：要符合标识符的命名规则和命名规范，方法和变量的命名规范均是小驼峰式。
④.方法体的代码：该方法要实现的功能代码，可以包含任意条语句。
⑤.参数列表：定义相应的变量来接收进入方法的数据。参数如果有多个，使用逗号进行分隔。
⑥.return语句：停止当前方法,遇到return则后面的代码均不执行，然后将后面的返回值返回给方法的调用处。
a.对于一个void没有返回值的方法：不能写return后面的返回值，只能写return自己用来结束方法。且此时return也可以省略不写。
b.对于一个有返回值的方法：方法结束处必须要有return语句来将返回值带出。

#.注意：
    方法里面的变量包括形式参数变量，其作用域仅限于该方法的内部。即一个方法里面的变量仅限于该方法内部使用，且一个类下面的各个方法
里面的变量没有关系，可以重名。

 */

public class MethodDefine {
    public static void main(String[] args) {

        int sum = getSum(5, 6);        // 调用方法getSum，传递两个整数，这里传递的实际数据又称为实际参数
        System.out.println(sum);
    }

    public static int getSum(int a, int b) { // 这里的参数用来接收实际数据，又称为形式参数
        int result = a + b;
        return result;
    }

}
